---
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Create VPC Interface 
      ec2_vpc_net:
        name: ansible-vpc-test-1	
        cidr_block: "{{vpc_cidr}}"
        region: "{{region}}"
        tags:
          module: ec2_vpc_net
          this: works
        tenancy: default
      register: vpc_1
      
    - name: Create Public-Subnet-1
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{vpc_1.vpc.id}}"
        cidr: "{{subnet1_cidr}}"
        region: "{{region}}"
        az: "{{az_1}}"
        tags:
          Name: public_subnet_1
      register: public_subnet_1
          
    - name: Create Private-Subnet-2
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{vpc_1.vpc.id}}"
        cidr: "{{subnet2_cidr}}"
        region: "{{region}}"
        az: "{{az_2}}"
        tags:
          Name: private_subnet_2
      register: private_subnet_2
      
    - name: Create Bastion EC2 Instance
      ec2:
        key_name: jwlee
        image: ami-08f90fed89a37985d
        instance_type: t2.micro
        region: "{{ region }}"
        vpc_subnet_id: "{{ public_subnet_1.subnet.id}}"
        instance_tags:
          Name: bastion_instance
        wait: true
        count: 1
      register: bastion_instance
      
    - name: Create NAT EC2 Instance
      ec2:
        key_name: jwlee
        image: ami-08f90fed89a37985d
        instance_type: m5.xlarge
        region: "{{ region }}"
        vpc_subnet_id: "{{ private_subnet_2.subnet.id}}"
        volumes:
          - device_name: /dev/sdb
            volume_type: io1
            iops: 1000
            volume_size: 200
            delete_on_termination: false
        instance_tags:
          Name: nat-instance-1
        wait: true
        count: 1
      register: nat_instance_1
      
    - name: Create an ELB and attach a listener
      elb_network_lb:
        name: nlb-8f90fed89a379
        subnets:
          - "{{private_subnet_2.subnet.id}}"
        listeners:
          - Protocol: TCP
            Port: 80 
            DefaultActions:
              - Type: forward
                TargetGroupName: mytargetgroup 
        state: present
 
    - name: Create Internet gateway
      ec2_vpc_igw:
        vpc_id: "{{vpc_1.vpc.id}}"
        region: "{{region}}"
        state: present
      register: igw_1  
      
    - name: Create Nat Gateway 
      ec2_vpc_nat_gateway:
        state: present
        region: "{{region}}"
        subnet_id: "{{public_subnet_1.subnet.id}}"
      register: nat_1
        
    - name: Create Route Table-Public
      ec2_vpc_route_table:
        vpc_id: "{{vpc_1.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: Public
        subnets:
          - "{{ public_subnet_1.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_1.gateway_id}}"
      register: public_route_table

    - name: Create Route Table-internal
      ec2_vpc_route_table:
        vpc_id: "{{vpc_1.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: Internal
        subnets:
          - "{{ private_subnet_2.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            instance_id: "{{nat_instance_1.instance_id}}"
      register: public_route_table
