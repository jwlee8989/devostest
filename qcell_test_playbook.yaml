---
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Create VPC Interface 
      ec2_vpc_net:
        name: "{{prefix}}-vpc"
        cidr_block: "{{vpc_cidr}}"
        region: "{{region}}"
        tenancy: default
      register: vpc_1
      
    - name: "Create Public-Subnet-{{az_1}}"
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{vpc_1.vpc.id}}"
        cidr: "{{public_subnet_a_cidr}}"
        region: "{{region}}"
        az: "{{region}}{{az_1}}"
        tags:
          Name: "{{prefix}}-pulic-subnet-{{az_1}}"
      register: "public_subnet_1"
      
    - name: "Create Public-Subnet-{{az_2}}"
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{vpc_1.vpc.id}}"
        cidr: "{{public_subnet_c_cidr}}"
        region: "{{region}}"
        az: "{{region}}{{az_2}}"
        tags:
          Name: "{{prefix}}-pulic-subnet-{{az_2}}"
      register: "public_subnet_2"
            
    - name: Create EC2 instance-1
      ec2:
        key_name: "{{key_pair}}"
        image: ami-08f90fed89a37985d
        instance_type: "{{instance_type}}"
        region: "{{ region }}"
        vpc_subnet_id: "{{public_subnet_1.subnet.id }}"
        volumes:
          - device_name: /dev/sdb
            volume_type: gp3
            volume_size: "{{volume_size}}"
            delete_on_termination: false
        instance_tags:
          Name: prd-seoul-proxy-{{az_1}}
        wait: true
        count: 1
      register: ec2_1
     
    - name: allocate a new elastic IP and associate it with an instance
      ec2_eip:
        device_id: "{{ec2_1.instance_id }}"
      
    - name: Create EC2 instance-2
      ec2:
        key_name: "{{key_pair}}"
        image: ami-08f90fed89a37985d
        instance_type: "{{instance_type}}"
        region: "{{ region }}"
        vpc_subnet_id: "{{public_subnet_1.subnet.id }}"
        volumes:
          - device_name: /dev/sdb
            volume_type: gp3
            volume_size: "{{volume_size}}"
            delete_on_termination: false
        instance_tags:
          Name: prd-seoul-proxy-{{az_2}}
        wait: true
        count: 1
      register: ec2_2
    
    - name: allocate a new elastic IP and associate it with an instance
      ec2_eip:
        device_id: "{{ec2_2.instance_id}}"
        
    - name: Create Internet gateway
      ec2_vpc_igw:
        vpc_id: "{{vpc_1.vpc.id}}"
        region: "{{region}}"
        state: present
        tags:
          Name: prd-seoul-igw
      register: igw_1  
        
    - name: Create Route Table-Public
      ec2_vpc_route_table:
        vpc_id: "{{vpc_1.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: "{{prefix}}-rt"
        subnets:
          - "{{ public_subnet_1.subnet.id }}"
          - "{{ public_subnet_2.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_1.gateway_id}}"
      register: public_rt
      
    - name: Create a target group with instance targets http
      elb_target_group:
        name: targetgroup-80
        protocol: tcp
        port: 80
        vpc_id: "{{vpc_1.vpc.id}}"
        health_check_protocol: http
        health_check_path: /
        successful_response_codes: "200,250-260"
        targets:
          - Id: "{{ec_1.instance.instance_id}}"
            Port: 80
          - Id: "{{ec_2.instance.instance_id}}"
            Port: 80
        state: present
        wait_timeout: 200
        wait: True
    
    - name: Create a target group with instance targets https
      elb_target_group:
        name: targetgroup-443
        protocol: tcp
        port: 443
        vpc_id: "{{vpc_1.vpc.id}}"
        health_check_protocol: http
        health_check_path: /
        successful_response_codes: "200,250-260"
        targets:
          - Id: "{{ec_1.instance.instance_id}}"
            Port: 443
          - Id: "{{ec_2.instance.instance_id}}"
            Port: 443
        state: present
        wait_timeout: 200
        wait: True
        
    - name: allocate a new elastic IP without associating it to anything
      ec2_eip:
        state: present
      register: nlb_eip_1
      
      
    - name: allocate a new elastic IP without associating it to anything
      ec2_eip:
        state: present
      register: nlb_eip_2  
    
    - name: Creat Loard Balancer
      elb_network_lb:
        name: "{{prefix}}-lb-ext"
        subnet_mappings:
          - SubnetId: "{{public_subnet_1.subnet.id}}"
            AllocationId: "{{nlb_eip_1.allocation_id }}"
          - SubnetId: "{{public_subnet_2.subnet.id}}"
            AllocationId: "{{nlb_eip_2.allocation_id }}"
        listeners:
          - Protocol: TCP # Required. The protocol for connections from clients to the load balancer (TCP, TLS, UDP or TCP_UDP) (case-sensitive).
            Port: 80 # Required. The port on which the load balancer is listening.
            DefaultActions:
              - Type: forward # Required. Only 'forward' is accepted at this time
                TargetGroupName: "{{prefix}}-tg-http" # Required. The name of the target group
          - Protocol: TCP
            Port: 443
            DefaultActions:
              - Type: forward
                TargetGroupName: "{{prefix}}-tg-https"
        state: present
     
